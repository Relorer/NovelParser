//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NovelParserBLL.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NovelParserBLL.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to cache.
        /// </summary>
        internal static string CacheFolder {
            get {
                return ResourceManager.GetString("CacheFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to if (document.querySelector(&quot;.auth-form a&quot;) !== null) {
        ///    document.querySelector(&quot;.auth-form a&quot;).click();
        ///    return &quot;true&quot;;
        ///}
        ///else return JSON.stringify(document.querySelector(&quot;#challenge-running&quot;) !== null);.
        /// </summary>
        internal static string CheckChallengeRunningScript {
            get {
                return ResourceManager.GetString("CheckChallengeRunningScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const forceDownload = async (url) =&gt; {
        ///    const fileName = url.substring(url.lastIndexOf(&quot;/&quot;) + 1);
        ///    await new Promise((resolve) =&gt; {
        ///        const img = document.createElement(&quot;img&quot;);
        ///        img.onload = () =&gt; {
        ///            var tag = document.createElement(&quot;a&quot;);
        ///            tag.href = url;
        ///            tag.download = fileName;
        ///            document.body.appendChild(tag);
        ///            tag.click();
        ///            document.body.removeChild(tag);
        ///            resolve(undefined);
        ///        };
        ///        i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DownloadImagesScript {
            get {
                return ResourceManager.GetString("DownloadImagesScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to return (() =&gt; {
        ///    const dict = {};
        ///    (window.__DATA__.chapters.branches.length &gt; 0
        ///        ? window.__DATA__.chapters.branches
        ///        : [{ id: &quot;nobranches&quot;, name: &quot;none&quot; }]
        ///    ).forEach(
        ///        (br) =&gt;
        ///        (dict[br.name] = (() =&gt; {
        ///            const chapter = {};
        ///            window.__DATA__.chapters.list
        ///                .filter((ch) =&gt; ch.branch_id === br.id || br.id === &quot;nobranches&quot;)
        ///                .forEach(
        ///                    (ch) =&gt;
        ///                    (chapter[ch.index] = {
        ///   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetChaptersScript {
            get {
                return ResourceManager.GetString("GetChaptersScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const getContent = () =&gt; {
        ///    return (
        ///        &quot;&lt;div&gt;&quot; + window.__pg.map((i) =&gt; `&lt;img src=&quot;${window.__info.img.url}/${i.u}&quot;/&gt;`).join(&quot;&quot;) + &quot;&lt;/div&gt;&quot;
        ///    );
        ///};
        ///
        ///return getContent();.
        /// </summary>
        internal static string GetComicsContentScript {
            get {
                return ResourceManager.GetString("GetComicsContentScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const forceDownload = async (url) =&gt; {
        ///    const fileName = url.substring(url.lastIndexOf(&quot;/&quot;) + 1);
        ///    await new Promise((resolve) =&gt; {
        ///        const img = document.createElement(&quot;img&quot;);
        ///        img.onload = () =&gt; {
        ///            var tag = document.createElement(&quot;a&quot;);
        ///            tag.href = url;
        ///            tag.download = fileName;
        ///            document.body.appendChild(tag);
        ///            tag.click();
        ///            document.body.removeChild(tag);
        ///            resolve(undefined);
        ///        };
        ///        i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetNovelInfoScript {
            get {
                return ResourceManager.GetString("GetNovelInfoScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to const forceDownload = async (url) =&gt; {
        ///    const fileName = url.substring(url.lastIndexOf(&quot;/&quot;) + 1);
        ///    await new Promise((resolve) =&gt; {
        ///        const img = document.createElement(&quot;img&quot;);
        ///        img.onload = () =&gt; {
        ///            var tag = document.createElement(&quot;a&quot;);
        ///            tag.href = url;
        ///            tag.download = fileName;
        ///            document.body.appendChild(tag);
        ///            tag.click();
        ///            document.body.removeChild(tag);
        ///            resolve(undefined);
        ///        };
        ///        i [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string GetRanobeContentScript {
            get {
                return ResourceManager.GetString("GetRanobeContentScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloading Images.
        /// </summary>
        internal static string ProgressStatusImageLoading {
            get {
                return ResourceManager.GetString("ProgressStatusImageLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading.
        /// </summary>
        internal static string ProgressStatusLoading {
            get {
                return ResourceManager.GetString("ProgressStatusLoading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parsing.
        /// </summary>
        internal static string ProgressStatusParsing {
            get {
                return ResourceManager.GetString("ProgressStatusParsing", resourceCulture);
            }
        }
    }
}
